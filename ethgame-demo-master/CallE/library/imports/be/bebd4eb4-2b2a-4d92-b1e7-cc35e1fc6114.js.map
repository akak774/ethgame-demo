{"version":3,"sources":["assets\\Script\\MainScene\\RobotInforCtrl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Global from \"../App/Global\";\nimport { LocMsg } from \"../BaseModel/MsgEvent\";\nimport { IRobot, RobotTypeDesc } from \"../Model/RobotProp\";\nimport { BuyRobot, UseRobot } from \"../Utils/LocalDataAPI\";\n\nconst { ccclass, property } = cc._decorator;\n\nexport enum INFOR_STATE {\n    BUY,\n    HAED,\n    ISUSEING,\n}\n\n@ccclass\nexport default class RobotInforCtrl extends cc.Component {\n\n    @property(cc.Sprite)\n    icon: cc.Sprite = null;\n\n    @property(cc.Label)\n    lbID: cc.Label = null;\n\n    @property(cc.Label)\n    lbType: cc.Label = null;\n\n    @property(cc.Label)\n    lbMint: cc.Label = null;\n\n    @property(cc.Label)\n    lbLv: cc.Label = null;\n\n    @property(cc.Label)\n    lbEfficiency: cc.Label = null;\n\n    @property(cc.Label)\n    lbLuck: cc.Label = null;\n\n    @property(cc.Label)\n    lbLoss: cc.Label = null;\n\n    @property(cc.Label)\n    lbSol: cc.Label = null;\n\n    @property([cc.SpriteFrame])\n    iconSFs: cc.SpriteFrame[] = [];\n\n    @property([cc.Node])\n    ndState: cc.Node[] = [];\n\n    private robot: IRobot = null;\n\n    protected onLoad(): void {\n        Global.Inst.On(LocMsg.UPDATE_ROBOT_INFOR, this.setDataToUI, this)\n    }\n    protected onEnable(): void {\n        // // 测试；\n        // let data: IRobot = {\n        //     id: 1,\n        //     robotImgId: 2,\n        //     robotType: RobotType.TYPE_1,\n        //     level: 3,\n        //     mint: 4,\n        //     sol: 5,\n        //     efficiency: 6,\n        //     luck: 7,\n        //     loss: 8\n        // };\n        // this.setDialog(data, INFOR_STATE.ISUSEING);\n    }\n\n    setDialog(data: IRobot, state: INFOR_STATE) {\n        this.setDataToUI(data, state);\n        this.node.active = true;\n    }\n\n    setDataToUI(data: IRobot, state: INFOR_STATE) {\n        this.robot = data; this.lbID.string = \"#\" + data.id;\n        this.lbType.string = RobotTypeDesc[data.robotType];\n        this.lbMint.string = \"Mint:\" + data.mint;\n        this.lbLv.string = \"Lv \" + data.level;\n        this.lbEfficiency.string = \"\" + data.efficiency;\n        this.lbLuck.string = \"\" + data.luck;\n        this.lbLoss.string = \"\" + data.loss;\n        this.lbSol.string = data.maticCost + \" SOL\";\n        this.icon.spriteFrame = this.iconSFs[data.robotImgId];\n\n        for (const iterator of this.ndState) {\n            iterator.active = false;\n        }\n        this.ndState[state].active = true;\n    }\n\n    OnBtnClose() {\n        this.node.active = false;\n    }\n\n    OnClickBuy() {\n        BuyRobot(this.robot);\n    }\n\n\n    OnClickUse() {\n        UseRobot(this.robot);\n    }\n\n    // update (dt) {}\n}\n"]}