{"version":3,"sources":["assets\\Script\\Shop\\UI_ShopScrollView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { IRobot, RobotTypeCount } from \"../Model/RobotProp\";\nimport ShopItem from \"./ShopItem\";\n\n\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class UI_ShopScrollView extends cc.ScrollView {\n    @property(cc.Prefab)\n    itemPrefab: cc.Prefab = null;\n    @property(cc.Layout)\n    lytContent: cc.Layout = null;\n    @property(cc.Node)\n    maskNode: cc.Node = null;\n    @property({ displayName: '每行个数' })\n    colCount: number = 3;\n\n    private _itemPools: ShopItem[] = [];\n    private _cacheData: { idx: number, roomTypeData: IRobot, poolIdx: number, height: number }[] = [];\n\n    private _inited = false;\n    private _totalHeight = 0;\n    private _itemCount = 0;\n\n    onLoad() {\n        // this.content.parent.parent.getComponent(cc.Widget).updateAlignment();\n        this.content.parent.getComponent(cc.Widget).updateAlignment();\n        this._InitPoolSize();\n        this._itemPools = [];\n        this.content.destroyAllChildren();\n\n        let initItemGenerator = this._GetItemGenerator();\n        let cb = () => {\n            let it = initItemGenerator.next();\n            if (it.done) {\n                this.unschedule(cb);\n            }\n        };\n        this.schedule(cb, 1 / cc.game.getFrameRate());\n    }\n\n    protected onEnable(): void {\n        super.onEnable();\n        let testData: IRobot[] = [];\n        for (let index = 0; index < 20; index++) {\n            let data: IRobot = {\n                id: index,\n                robotImgId: index % RobotTypeCount,\n                mint: index,\n                sol: index,\n                level: index,\n                robotType: index % RobotTypeCount,\n                efficiency: Math.ceil(Math.random() * 10) / 10,\n                luck: Math.ceil(Math.random() * 10) / 10,\n                loss: Math.ceil(Math.random() * 10) / 10\n            }\n            testData.push(data)\n\n        }\n        this.SetData(testData);\n    }\n\n    SetData(gameTypeCreatDatas: IRobot[]) {\n\n        this._cacheData = [];\n        this._totalHeight = 0;\n\n        //AppLog.Log('-- itemCount: ', this._itemCount);\n\n        for (let i = 0, poolIdx = 0; i < gameTypeCreatDatas.length; ++i, ++poolIdx) {\n            if (poolIdx >= this._itemCount) poolIdx = 0;\n            let h = this.itemPrefab.data.height;\n            this._cacheData.push({\n                idx: i,\n                roomTypeData: gameTypeCreatDatas[i],\n                poolIdx: poolIdx,\n                height: h,\n            });\n        }\n\n        let col = Math.ceil(this._cacheData.length / this.colCount);\n        let padding = this.lytContent.paddingTop + this.lytContent.paddingBottom;\n        this._totalHeight = col * this.itemPrefab.data.height + (col - 1) * this.lytContent.spacingY + padding;\n        this.content.height = this.elastic ? Math.max(this._totalHeight, this.content.parent.height) : this._totalHeight;\n\n        if (this._inited) this.OnScrolling(this, null);\n    }\n\n    OnScrolling(event: cc.ScrollView, customEventData: string) {\n        if (!this._inited) return;\n        if (!this.itemPrefab.data) return;\n\n        let offsetY = event.getScrollOffset().y;\n        let res = this._CalculateStartAndEndIdx(offsetY);\n        for (let i = res.startRow; i <= res.endRow; ++i) {\n            for (let j = 0; j < this.colCount; ++j) {\n                this._ProcessScrollViewItem(i * this.colCount + j);\n            }\n        }\n    }\n\n    private _CalculateStartAndEndIdx(offsetY: number): { startRow: number; endRow: number } {\n\n        let itemHeight = this.itemPrefab.data.height + this.lytContent.spacingY;\n\n        let startRow = Math.floor((offsetY + this.lytContent.paddingTop) / itemHeight);\n        // if (startRow > 0) --startRow;\n\n        let maxRow = Math.ceil(this._itemCount / this.colCount) - 1;\n        let maxDataCount = Math.ceil(this._cacheData.length / this.colCount);\n\n        let endRow = startRow + maxRow;\n        if (endRow >= maxDataCount) {\n            endRow = maxDataCount - 1;\n        }\n        return {\n            startRow: startRow,\n            endRow: endRow,\n        };\n    }\n\n    private _ProcessScrollViewItem(idx: number) {\n        let data = this._cacheData[idx];\n        if (!data) return;\n        let item = this._itemPools[data.poolIdx];\n        if (!item || (item && item.renderIdx == idx)) return;\n        item.node.name = idx.toString();\n        item.SetItem(idx, data.roomTypeData);\n        item.node.active = true;\n        item.node.setPosition(this._CalculateItemPos(idx));\n    }\n\n    private _CalculateItemPos(idx) {\n        let row = Math.floor(idx / this.colCount);\n        let offsetY = row * (this.itemPrefab.data.height + this.lytContent.spacingY) + this.itemPrefab.data.height / 2;\n        //posX\n        let xStart = -this.lytContent.node.width / 2 + this.lytContent.paddingLeft;\n        let col = idx - row * this.colCount;\n        let x = xStart + col * (this.itemPrefab.data.width + this.lytContent.spacingX) + this.itemPrefab.data.width / 2;\n        return cc.v2(x, -offsetY);\n    }\n\n    private *_GetItemGenerator() {\n        for (let index = 0; index < this._itemCount; index++) {\n            let node = cc.instantiate(this.itemPrefab);\n            node.active = false;\n            this.content.addChild(node);\n            let comp = node.getComponent(ShopItem);\n            this._itemPools.push(comp);\n            yield;\n        }\n        this._inited = true;\n        this.OnScrolling(this, null);\n    }\n\n    private _InitPoolSize() {\n        let item_w = this.itemPrefab.data.width;\n        let item_h = this.itemPrefab.data.height;\n        let colCount = this.colCount;\n        let rowCount = Math.abs(Math.ceil(this.content.parent.height / (item_h + this.lytContent.spacingY)));\n        this._itemCount = colCount * (rowCount + 1);\n    }\n}\n"]}